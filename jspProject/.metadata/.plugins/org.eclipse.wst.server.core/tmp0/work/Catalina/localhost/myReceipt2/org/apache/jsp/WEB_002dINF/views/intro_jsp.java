/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.19
 * Generated at: 2025-05-07 01:20:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class intro_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>My Receipt</title>\r\n");
      out.write("<link rel=\"stylesheet\" type=\"text/css\" href=\"resources/css/main.css\">\r\n");
      out.write(" <style>\r\n");
      out.write(" main {\r\n");
      out.write(" 	color:white;\r\n");
      out.write(" 	}\r\n");
      out.write("  .container {\r\n");
      out.write("    max-width: 900px;\r\n");
      out.write("    margin: 90px auto;\r\n");
      out.write("    background: white;\r\n");
      out.write("    padding: 70px 40px;\r\n");
      out.write("    border-radius: 10px;\r\n");
      out.write("    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.05);\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  h1 {\r\n");
      out.write("    font-size: 2rem;\r\n");
      out.write("    color: #2c3e50;\r\n");
      out.write("    margin-bottom: 20px;\r\n");
      out.write("    border-bottom: 2px solid #3498db;\r\n");
      out.write("    padding-bottom: 10px;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  h2 {\r\n");
      out.write("    font-size: 1.3rem;\r\n");
      out.write("    color: #34495e;\r\n");
      out.write("    margin-top: 30px;\r\n");
      out.write("    margin-bottom: 20px;\r\n");
      out.write("  }\r\n");
      out.write("  main section{\r\n");
      out.write("  	margin : 50px 0;\r\n");
      out.write("  }\r\n");
      out.write("  .container p, .container li {\r\n");
      out.write("    color: #555;\r\n");
      out.write("    font-size: 1rem;\r\n");
      out.write("    line-height: 1.8;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  ul {\r\n");
      out.write("    padding-left: 20px;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .btn-write {\r\n");
      out.write("    display: inline-block;\r\n");
      out.write("    padding: 12px 24px;\r\n");
      out.write("    background-color: #3498db;\r\n");
      out.write("    color: white;\r\n");
      out.write("    font-weight: bold;\r\n");
      out.write("    border-radius: 6px;\r\n");
      out.write("    text-decoration: none;\r\n");
      out.write("    margin-top: 30px;\r\n");
      out.write("    transition: background-color 0.3s;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .btn-write:hover {\r\n");
      out.write("    background-color: #2b7cb8;\r\n");
      out.write("  }\r\n");
      out.write("\r\n");
      out.write("  .highlight {\r\n");
      out.write("  	color: gray;\r\n");
      out.write("    background: #ecf7ff;\r\n");
      out.write("    border-left: 4px solid #3498db;\r\n");
      out.write("    padding: 10px 15px;\r\n");
      out.write("    margin-top: 10px;\r\n");
      out.write("    border-radius: 6px;\r\n");
      out.write("    line-height:30px;\r\n");
      out.write("  }\r\n");
      out.write(" </style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/header.jsp", out, false);
      out.write("\r\n");
      out.write("	<main>\r\n");
      out.write("	 <div class=\"container\">\r\n");
      out.write("	    <h1>My Receipt 소개</h1>\r\n");
      out.write("	\r\n");
      out.write("	    <section>\r\n");
      out.write("	      <h2>📌 My Receipt란?</h2>\r\n");
      out.write("	      <p>My Receipt는 맛집 탐방 후기를 공유하고, 다른 사람과 정보를 나눌 수 있는 공간입니다. 누구나 쉽게 정직한 후기를 남기고, 신뢰할 수 있는 리뷰를 찾아볼 수 있어요.</p>\r\n");
      out.write("	    </section>\r\n");
      out.write("	\r\n");
      out.write("	    <section>\r\n");
      out.write("	      <h2>✍️ 후기 작성 가이드</h2>\r\n");
      out.write("	      <ul>\r\n");
      out.write("	        <li>방문한 가게의 이름과 위치를 정확하게 작성해 주세요.</li>\r\n");
      out.write("	        <li>음식의 맛, 분위기, 가격 등을 구체적으로 표현해 주세요.</li>\r\n");
      out.write("	        <li>사진을 함께 업로드하면 신뢰도가 높아져요.</li>\r\n");
      out.write("	        <li>복붙보다는 나만의 경험을 진솔하게 써 주세요.</li>\r\n");
      out.write("	      </ul>\r\n");
      out.write("	    </section>\r\n");
      out.write("	\r\n");
      out.write("	    <section>\r\n");
      out.write("	      <h2>🚫 금지되는 내용</h2>\r\n");
      out.write("	      <ul>\r\n");
      out.write("	        <li>욕설, 비방, 인신공격성 내용</li>\r\n");
      out.write("	        <li>광고, 홍보를 목적으로 한 글</li>\r\n");
      out.write("	        <li>직접 방문하지 않은 가게의 허위 후기</li>\r\n");
      out.write("	      </ul>\r\n");
      out.write("	    </section>\r\n");
      out.write("	\r\n");
      out.write("	    <section>\r\n");
      out.write("	      <h2>✅ 좋은 후기 예시</h2>\r\n");
      out.write("	      <div class=\"highlight\">\r\n");
      out.write("	        \"성수동 ○○카페는 분위기가 조용해서 작업하기 딱 좋아요. 시그니처 라떼가 고소하고 부드러워서 감탄했어요. \r\n");
      out.write("	        <br/>직원분들도 친절해서 재방문 의사 있습니다!\"\r\n");
      out.write("	      </div>\r\n");
      out.write("	    </section>\r\n");
      out.write("	\r\n");
      out.write("	    <section>\r\n");
      out.write("	      <a href=\"/myReceipt2/board\" class=\"btn-write\">후기 작성하러 가기</a>\r\n");
      out.write("	    </section>\r\n");
      out.write("	  </div>\r\n");
      out.write("\r\n");
      out.write("    </main>\r\n");
      out.write("	");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/WEB-INF/views/common/footer.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
